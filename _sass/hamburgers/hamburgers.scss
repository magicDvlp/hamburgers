@charset "UTF-8";
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Base Hamburger (We need this)
// ==================================================
@forward "var";
@use "base";

// Hamburger types
// ==================================================
@use "types/3dx" as *;
@use "types/3dx-r" as *;
@use "types/3dy" as *;
@use "types/3dy-r" as *;
@use "types/3dxy" as *;
@use "types/3dxy-r" as *;
@use "types/arrow";
@use "types/arrow-r";
@use "types/arrowalt";
@use "types/arrowalt-r";
@use "types/arrowturn";
@use "types/arrowturn-r";
@use "types/boring";
@use "types/collapse";
@use "types/collapse-r";
@use "types/elastic";
@use "types/elastic-r";
@use "types/emphatic";
@use "types/emphatic-r";
@use "types/minus";
@use "types/slider";
@use "types/slider-r";
@use "types/spin";
@use "types/spin-r";
@use "types/spring";
@use "types/spring-r";
@use "types/stand";
@use "types/stand-r";
@use "types/squeeze";
@use "types/vortex";
@use "types/vortex-r";

// ==================================================
// Cooking up additional types:
//
// The Sass for each hamburger type should be nested
// inside an @if directive to check whether or not
// it exists in $hamburger-types so only the CSS for
// included types are generated.
//
// e.g. hamburgers/types/_new-type.scss
//
// @if index($hamburger-types, new-type) {
//   .hamburger--new-type {
//     ...
//   }
// }
